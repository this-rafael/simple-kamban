generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SIMPLE_KAMBAM_TASK_DATABASE_URL")
}

model attachments {
  id          BigInt    @id @default(autoincrement())
  external_id String    @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String    @db.VarChar(150)
  url         String    @db.VarChar(200)
  type        String    @db.VarChar(50)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  created_by  BigInt
  attached_to BigInt
  tasks       tasks     @relation(fields: [attached_to], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users       users     @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tasks {
  id                            BigInt             @id @default(autoincrement())
  external_id                   String             @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title                         String             @db.VarChar(255)
  description                   String?
  status                        Int                @db.SmallInt
  created_by                    BigInt
  create_at                     DateTime           @default(now()) @db.Timestamp(6)
  super_task_id                 BigInt?
  users_tasks_created_byTousers users              @relation("tasks_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tasks                         tasks?             @relation("tasksTotasks_super_task_id", fields: [super_task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  attachments                   attachments[]
  other_tasks                   tasks[]            @relation("tasksTotasks_super_task_id")
  tasks_allocation              tasks_allocation[]
}

model users {
  id                            BigInt             @id @default(autoincrement())
  nickname                      String             @db.VarChar(255)
  external_id                   String             @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  attachments                   attachments[]
  tasks_tasks_created_byTousers tasks[]            @relation("tasks_created_byTousers")
  tasks_allocation              tasks_allocation[]
}

model tasks_allocation {
  id      BigInt @id @default(autoincrement())
  task_id BigInt
  user_id BigInt
  tasks   tasks  @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users   users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
